// C# Solution -----------------------------------------------------------------------------------

public class Solution {
    public int StrStr(string haystack, string needle) {
        if (haystack.Length < needle.Length)    return -1;
        
        if (string.IsNullOrEmpty(haystack)|| string.IsNullOrEmpty(needle)|| haystack == needle)             
           {return 0;}
        
        for (int i = 0; i < haystack.Length; i++){
            if (haystack[i] == needle[0])
            {
                if ((haystack.Length - i) < needle.Length)    return -1;
                else{
                    if (haystack.Substring(i, needle.Length) == needle) return i;
                    else    continue;
                }
            }
        }
        
        return -1;
    }
}

# Python3 Solution ------------------------------------------------------------------------------

class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        
        if len(haystack) < len(needle):
            return -1
        
        if haystack == needle:
            return 0
        
        if needle in haystack:
            for i in range (len(haystack)):
                if (haystack[i:i+len(needle)] == needle):
                    return i
            return -1
        else:
            return -1
