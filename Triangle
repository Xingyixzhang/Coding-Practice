Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.

For example, given the following triangle

[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]
The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).

Note:

Bonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.

public class Solution {
    public int MinimumTotal(IList<IList<int>> triangle) {
        if (triangle.Count == 0)   return 0;
        for (int i = triangle.Count - 2; i >= 0; i--){
            for (int j = 0; j <= i; j++){
                int a = triangle[i+1][j];
                int b = triangle[i+1][j+1];
                triangle[i][j] = Math.Min(a, b) + triangle[i][j];
            }
        }
        return triangle[0][0];
    }
}
