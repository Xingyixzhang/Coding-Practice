Question --
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

Example 1:

Input: m = 3, n = 2
Output: 3
Explanation:
From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Right -> Down
2. Right -> Down -> Right
3. Down -> Right -> Right
Example 2:

Input: m = 7, n = 3
Output: 28
-----------------------------------------------------------------------------------------
public class Solution {
    public int UniquePaths(int m, int n) {
        if (m < 2 || n < 2) return 1;
        int[,] board = new int[m,n];
        for (int i = 0; i < m; i++)     board[i, 0] = 1;
        for (int i = 0; i < n; i++)     board[0, i] = 1;
        for (int i = 1; i < m; i++)
            for (int j = 1; j < n; j++)
                board[i, j] = board[i-1, j] + board[i, j-1];
        return board[m-1, n-1];
    }
}
