Given a binary tree where each path going from the root to any leaf form a valid sequence, 
check if a given string is a valid sequence in such binary tree. 

We get the given string from the concatenation of an array of integers arr and 
the concatenation of all values of the nodes along a path results in a sequence in the given binary tree.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsValidSequence(TreeNode root, int[] arr) {
        if (root == null)    return false;
        return isValid(root, arr, 0);
    }
    public bool isValid(TreeNode root, int[] arr, int index){
         if (root.val != arr[index] || index >= arr.Length) return false;
         if (index == arr.Length - 1)    return (root.left == null) && (root.right == null);
         return (root.left != null && isValid(root.left, arr, index+1)) ||
                (root.right != null && isValid(root.right, arr, index+1));
    }
}
