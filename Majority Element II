Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Note: The algorithm should run in linear time and in O(1) space.

Example 1:

Input: [3,2,3]
Output: [3]
Example 2:

Input: [1,1,1,3,3,2,2,2]
Output: [1,2]

public class Solution {
    public IList<int> MajorityElement(int[] nums) {
        var pairs = new Dictionary<int, int>();
        IList<int> res = new List<int>();
        int count = nums.Length / 3;
        foreach (int i in nums){
            if (! pairs.ContainsKey(i)) pairs.Add(i, 1);
            else    pairs[i]++;
        }
        foreach (var kvp in pairs){
            if (kvp.Value > count)   res.Add(kvp.Key);
        }
        return res;
    }
}
