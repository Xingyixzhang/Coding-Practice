Given an array of strings, group anagrams together.

Example:

Input: ["eat", "tea", "tan", "ate", "nat", "bat"],
Output:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]
Note:

All inputs will be in lowercase.
The order of your output does not matter.

public class Solution {
    public IList<IList<string>> GroupAnagrams(string[] strs) {
        if(strs == null || strs.Length == 0)    return new List<IList<String>>();
	    var pairs = new Dictionary<string, List<string>>();
	    foreach (string s in strs) {
		    char[] ch = s.ToCharArray();
		    Array.Sort(ch);
		    string keyStr = new string(ch);
		    if(!pairs.ContainsKey(keyStr))    pairs.Add(keyStr, new List<string>());
		    pairs[keyStr].Add(s);
	    }	       
	    return new List<IList<string>>(pairs.Values);
    }
}
