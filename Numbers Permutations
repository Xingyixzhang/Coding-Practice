Given a collection of distinct integers, return all possible permutations.

Example:

Input: [1,2,3]
Output:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

public class Solution {
    List<IList<int>> res = new List<IList<int>>();
    public IList<IList<int>> Permute(int[] nums) {
        GetRes(new List<int>(), nums);
        return res;
    }
    private void GetRes(List<int> list, int[] nums){
        List<int> temp = null;
        if (list.Count != nums.Length){
            for (int i = 0; i < nums.Length; i++){
                if (!list.Contains(nums[i])){
                    temp = new List<int>(list);
                    temp.Add(nums[i]);
                    GetRes(temp, nums);
                }
            }
        }
        else    res.Add(list);
    }
}
