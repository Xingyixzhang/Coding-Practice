/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public IList<int> GetAllElements(TreeNode root1, TreeNode root2) {
        List<int> list1 = new List<int>(), list2 = new List<int>();
        Inorder(root1, list1);
        Inorder(root2, list2);
        return MergeLists(list1, list2);
    }
    public IList<int> MergeLists(List<int> l1, List<int> l2){
        var res = new List<int>();
        int  i = 0, j = 0;
        while (i < l1.Count && j < l2.Count){
            if (l1[i] < l2[j])  res.Add(l1[i++]);
            else    res.Add(l2[j++]);
        }
        while (i < l1.Count)    res.Add(l1[i++]);
        while (j < l2.Count)    res.Add(l2[j++]);
        return res;
    }
    public void Inorder(TreeNode root, List<int> res){
        if (root == null)   return;
        Inorder(root.left, res);
        res.Add(root.val);
        Inorder(root.right, res);
    }
}
