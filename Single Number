public class Solution {
    public int SingleNumber(int[] nums) {
        var dict = new Dictionary<int, int>();
        for (int i=0; i < nums.Length; i++){
            if (!dict.ContainsKey(nums[i])) dict.Add(nums[i], 1);
            else    dict[nums[i]]++;
        }
        foreach (KeyValuePair<int, int> item in dict){
            if (dict[item.Key] == 1)    return item.Key;
        }
        return nums[0];
    }
}

public class Solution {
    public int SingleNumber(int[] nums){
            if (nums == null)   return -1;
            int sum = 0;
            foreach(var item in nums){
                sum ^= item;
            }
            return sum;
    }
}

***
“^=”(Bitwise Exclusive OR) : This operator is combination of ‘^’ and ‘=’ operators. 
This operator first “Bitwise Exclusive OR” the current value of the variable on left by the value on the right 
and then assigns the result to the variable on the left.

Example :
(a ^= 2) can be written as (a = a ^ 2)
If initially value stored in a is 6. Then (a ^= 2) = 4.
