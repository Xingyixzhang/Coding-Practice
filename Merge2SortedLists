/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2)
    {
        if (l1 == null) return l2;
        if (l2 == null) return l1;
        
        ListNode answer = new ListNode(0);
        ListNode current = answer;                            // Current as the new node in the linked list.
        
        while (l1 != null && l2 != null){
            if (l1.val < l2.val){
                current.next = new ListNode(l1.val);
                current = current.next;
                l1 = l1.next;
            }
            else{
                current.next = new ListNode(l2.val);
                current = current.next;
                l2 = l2.next;
            }
        }
        
        if (l1 != null) current.next = l1;
        if (l2 != null) current.next = l2;
        
        return answer.next;                                 // Return the whole list.
    }    
}
