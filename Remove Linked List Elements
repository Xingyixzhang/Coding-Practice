/** ITERATIVE APPROACH --

 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode RemoveElements(ListNode head, int val) {
        ListNode dummy = new ListNode(-1), prev;
        dummy.next = head;
        prev = dummy;
        while (prev.next != null){
            if (prev.next.val == val)    prev.next = prev.next.next;
            else prev = prev.next;
        }
        return dummy.next;
    }
}

/** RECURSIVE APPROACH --

 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode RemoveElements(ListNode head, int val) {
        if (head == null)   return null;
        head.next = RemoveElements(head.next, val);
        return head.val == val ? head.next: head;
    }
}
