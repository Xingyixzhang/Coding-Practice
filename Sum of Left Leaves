using System; 
  
// C# program to find sum of all left leaves  
public class Node 
{ 
    public int data; 
    public Node left, right; 
  
    public Node(int item) 
    { 
        data = item; 
        left = right = null; 
    } 
} 
  
public class BinaryTree 
{ 
    public Node root; 
  
    // A utility function to check if a given node is leaf or not  
    // A virtual method is a method that can be redefined in derived classes.
    public virtual bool isLeaf(Node node) 
    { 
        if (node == null) 
        { 
            return false; 
        } 
        if (node.left == null && node.right == null) 
        { 
            return true; 
        } 
        return false; 
    } 
  
  public virtual int leftLeavesSum(Node node) 
    { 
        int res = 0; 
  
        if (node != null) 
        { 
            if (isLeaf(node.left)) 
            { 
                res += node.left.data; 
            } 
            else // Else recur for left child of root 
            { 
                res += leftLeavesSum(node.left); 
            } 
  
            // Recur for right child of root and update res  
            res += leftLeavesSum(node.right); 
        } 
  
        // return result  
        return res; 
    } 

/* -----------------------------------------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public bool isLeave(TreeNode node){
        if (node == null)   return false;
        if (node.left == null && node.right == null)    return true;
        return false;
    }
    public int SumOfLeftLeaves(TreeNode root) {
        int sum = 0;
        if (root != null){
            if (isLeave(root.left)) sum += root.left.val;
            else    sum += SumOfLeftLeaves(root.left);
            sum += SumOfLeftLeaves(root.right);
        }
        return sum;
    }
}
 */ --------------------------------------------------------------------------------
    // Driver program  
    public static void Main(string[] args) 
    { 
        BinaryTree tree = new BinaryTree(); 
        tree.root = new Node(20); 
        tree.root.left = new Node(9); 
        tree.root.right = new Node(49); 
        tree.root.left.right = new Node(12); 
        tree.root.left.left = new Node(5); 
        tree.root.right.left = new Node(23); 
        tree.root.right.right = new Node(52); 
        tree.root.left.right.right = new Node(12); 
        tree.root.right.right.left = new Node(50); 
  
        Console.WriteLine("The sum of leaves is " + tree.leftLeavesSum(tree.root)); 
    } 
} 
